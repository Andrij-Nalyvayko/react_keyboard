{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","keyOnPress","event","setState","key","document","addEventListener","this","removeEventListener","mainText","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAyB,CACvBC,WAAY,MAFhB,EAaEC,WAAa,SAACC,GACZ,EAAKC,SAAS,CAAEH,WAAYE,EAAME,OAdtC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,cAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,cAV/C,oBAiBE,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WACFS,EAAWT,EAAU,mCACKA,EADL,KAEvB,0BAEJ,OACE,qBAAKU,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGD,UA1BX,GAAyBE,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,W","file":"static/js/main.c2c84892.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  pressedKey: null | string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    pressedKey: null,\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.keyOnPress);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.keyOnPress);\n  }\n\n  keyOnPress = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: event.key });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n    const mainText = pressedKey\n      ? `The last pressed key is [${pressedKey}]`\n      : 'Nothing was pressed yet';\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {mainText}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}